library(ggplot2)
atm <- atm %>%
mutate("DATE" = as_date("DATE"))
arrange("DATE","ATM")
atm <- atm %>%
mutate("DATE" = as_date("DATE")) %>%
arrange("DATE","ATM")
atm
atm <- atm %>%
mutate("DATE" = as_date(DATE)) %>%
arrange("DATE","ATM")
atm
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange("DATE","ATM")
atm
atm <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange("DATE","ATM")
atm
View(atm)
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange("DATE","ATM") %>%
filter(ATM == "ATM3")
atm
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange(DATE,ATM) %>%
filter(ATM == "ATM3")
atm
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange(DATE,ATM)
atm
atm <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange(DATE,ATM)
atm
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange(DATE,ATM) %>%
as_tsibble(index = DATE)
atm <- atm %>%
mutate(DATE = yearweek(DATE)) %>%
arrange(DATE,ATM) %>%
as_tsibble(index = DATE)
atm <- atm %>%
mutate(DATE = yearmonth(DATE)) %>%
arrange(DATE,ATM) %>%
as_tsibble(index = DATE)
atm <- atm %>%
mutate(DATE = as_date(DATE)) %>%
arrange(DATE,ATM)
atm
atm <- atm %>%
rename(date=DATE, atm=ATM, cash=Cash) %>%
mutate(date = as_date(date)) %>%
arrange(date,atm)
atm
atm <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
View(atm)
atm <- atm %>%
rename(date=DATE, atm=ATM, cash=Cash) %>%
mutate(date = as_date(date)) %>%
arrange(date,atm)
atm
atm$cash <- round(atm$cash, 0)
atm
atm <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
head(atm)
atm <- atm() %>%
rename(date=DATE, atm=ATM, cash=Cash) %>%
mutate(date = as.Date(date))
atm <- atm %>%
rename(date=DATE, atm=ATM, cash=Cash) %>%
mutate(date = as.Date(date))
atm
atm <- atm %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get indivdual column for each atm
pivot_wider(names_from=atm, values_from = cash)
#read in data and specify column types
atm <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
head(atm)
atm <- atm %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get indivdual column for each atm
pivot_wider(names_from=atm, values_from = cash)
atm
atm <- atm %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA")
#read in data and specify column types
atm <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
head(atm)
#read in data and specify column types
atm_data <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
head(atm_data)
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA")
atm
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01")
atm
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
atm
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type
mutate(date = as.Date(date), cash = cash*100) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
atm
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type , cash = cash*100
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
atm
unique(atm$ATM3)
ggplot(atm_data, aes(ATM, cash)) +
geom_line() +
facet_grid(cash ~ .)
ggplot(atm_data, aes(ATM, Cash)) +
geom_line() +
facet_grid(Cash ~ .)
```{r}
atm_data %>% ggplot(aes(x = date, y = cash, col = atm)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ atm, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>% ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ atm, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>% ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
View(atm_data)
sum(is.na(atm_data$ATM))
View(atm_data)
atm_data %>%
filter(DATE < "2010-05-01") %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>%
filter(DATE < "2010-05-01", -ATM=='NA') %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>%
filter(DATE < "2010-05-01", ATM != NA) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>%
filter(c(DATE < "2010-05-01", ATM != NA)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>%
filter(DATE < "2010-05-01") %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>%
filter(DATE < "2010-05-01", !is.na(ATM)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Hundreds of Dollars of Cash Withdrawn per ATM per Day", x = "Date") +
scale_y_continuous("Cash Withdrawn ($100's)")
atm_data %>%
filter(DATE < "2010-05-01", !is.na(ATM)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("$100's")
atm_data %>%
filter(DATE < "2010-05-01", !is.na(ATM)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("Withdrawals (hundreds)")
atm_data %>%
filter(DATE < "2010-05-01", !is.na(ATM)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("Withdrawals (hundreds)")
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type , cash = cash*100
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
atm
install.packages("reactable")
(reactable)
library(reactable)
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type , cash = cash*100
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
reactable(atm, bordered = TRUE, striped = TRUE, highlight = TRUE,
filterable = TRUE,  showPageSizeOptions = TRUE,
pageSizeOptions = c(5, 10, 15), defaultPageSize = 5)
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type , cash = cash*100
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
atm
View(atm_data)
View(atm_data)
View(atm)
which(is.na(atm), arr.ind=TRUE)
which(is.na(atm))
apply(is.na(atm),2,sum)
atm[!complete.cases(atm), ]
which(is.na(atm), arr.ind=TRUE)
apply(is.na(atm),2,sum)
atm[!complete.cases(atm), ]
max(atm$ATM4)
apply(is.na(atm),2,sum)
atm[!complete.cases(atm), ]
max(atm$ATM4)
#summary stats
summary(atm)
gc()
library(readxl)
library(fpp3)
library(forecast)
library(ggplot2)
library(reactable)
#read in data and specify column types
atm_data <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
head(atm_data)
atm_data %>%
filter(DATE < "2010-05-01", !is.na(ATM)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("Withdrawals (hundreds)")
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type , cash = cash*100
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
head(atm)
#how man NA values
apply(is.na(atm),2,sum)
#what dates are NAs present
atm[!complete.cases(atm), ]
#unique(atm$ATM3)
#sum(is.na(atm_data$ATM))
#summary stats
summary(atm)
tsoutliers(atm$ATM)
autoplot(tsclean(atm$ATM), series="clean", color='red', lwd=0.9) +
autolayer(atm$ATM, series="original", color='gray', lwd=1) +
geom_point(data = tsoutliers(atm$ATM) %>% as.data.frame(),
aes(x=index, y=replacements), col='blue') +
labs(x = "Day", y = "atm$ATM price ($US)")
autoplot(tsclean(atm$ATM4), series="clean", color='red', lwd=0.9) +
autolayer(atm$ATM4, series="original", color='gray', lwd=1) +
geom_point(data = tsoutliers(atm$ATM4) %>% as.data.frame(),
aes(x=index, y=replacements), col='blue') +
labs(x = "Day", y = "atm$ATM price ($US)")
tsoutliers(atm$ATM4)
autoplot(tsclean(atm$ATM4), series="clean", color='red', lwd=0.9) +
autolayer(atm$ATM4, series="original", color='gray', lwd=1) +
geom_point(data = tsoutliers(atm$ATM4) %>% as.data.frame(),
aes(x=index, y=replacements), col='blue') +
labs(x = "Day", y = "atm$ATM price ($US)")
View(atm)
autoplot(tsclean(atm$ATM4), series="clean", color='red', lwd=0.9) +
autolayer(atm$ATM4, series="original", color='gray', lwd=1) +
geom_point(data = tsoutliers(atm$ATM4)
%>% as.data.frame(),
aes(x=index, y=replacements), col='blue') +
labs(x = "Day", y = "price ($US)")
autoplot(tsclean(atm), series="clean", color='red', lwd=0.9) +
autolayer(atm$ATM4, series="original", color='gray', lwd=1) +
geom_point(data = tsoutliers(atm$ATM4)
%>% as.data.frame(),
aes(x=index, y=replacements), col='blue') +
labs(x = "Day", y = "price ($US)")
library(ffp2)
library(fpp2)
gold
atm4 = ts(atm$ATM4)
atm4
tsoutliers(atm4)
tsoutliers(atm4)$replacements
atm4[285] <- tsoutliers(atm4)$replacements
atm4
#identify the outlier index and generate a replacement
atm$ATM4[285] <- tsoutliers(atm$ATM4)$replacements
atm$ATM4[285]
tsoutliers(atm$ATM1)
na.interp(atm$ATM1)
sum(is.na(na.interp(atm$ATM1)))
na.interp(atm$ATM1)
atm$ATM1 <- na.interp(atm$ATM1)
plot(atm$ATM1)
atm %>%
ggplot(aes(x = DATE, y = ATM1)) +
geom_line(show.legend = FALSE)  +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("Withdrawals (hundreds)")
View(atm)
atm %>%
ggplot(aes(x = date, y = ATM1)) +
geom_line(show.legend = FALSE)  +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("Withdrawals (hundreds)")
install.packages("imputeTS")
library(imputeTS)
#ATM1
atm$ATM1 <-  na_interpolation(atm$ATM1)
na_interpolation(atm$ATM2)
#ATM2
atm$ATM2 <-  na_interpolation(atm$ATM2)
#generate estimates for NAs and replace with new values
#ATM1
atm$ATM1 <- na_interpolation(atm$ATM1)
#ATM2
atm$ATM2 <-  na_interpolation(atm$ATM2)
ggplot_na_distribution(atm$ATM2)
library(readxl)
library(fpp3)
library(forecast)
library(ggplot2)
library(imputeTS)
#read in data and specify column types
atm_data <- read_excel("ATM624Data.xlsx", col_types = c("date", "text", "numeric"))
head(atm_data)
atm_data %>%
filter(DATE < "2010-05-01", !is.na(ATM)) %>%
ggplot(aes(x = DATE, y = Cash, col = ATM)) +
geom_line(show.legend = FALSE) +
facet_wrap(~ ATM, ncol = 1, scales = "free_y") +
labs(title = "Daily ATM Withdrawals", x = "Date") +
scale_y_continuous("Withdrawals (hundreds)")
atm <- atm_data %>%
#lowercase column names
rename(date=DATE, atm=ATM, cash=Cash) %>%
#convert date column from POSIXct to date type , cash = cash*100
mutate(date = as.Date(date)) %>%
#convert from long to wide by expanding the atm column to get individual column for each atm
pivot_wider(names_from=atm, values_from = cash) %>%
#remove the NA column
select(-"NA") %>%
#filter out what we will be forecasting
filter(date < "2010-05-01") %>%
#convert to tsibble
as_tsibble(index=date)
head(atm)
#how man NA values
apply(is.na(atm),2,sum)
#what dates are NAs present
atm[!complete.cases(atm), ]
#unique(atm$ATM3)
#sum(is.na(atm_data$ATM))
#summary stats
summary(atm)
ggplot_na_distribution(atm$ATM2)
summary(atm)
#generate estimates for NAs and replace with new values
#ATM1
atm$ATM1 <- na.interp(atm$ATM1)
#ATM2
atm$ATM2 <-  na.interp(atm$ATM2)
#ATM4
#identify the outlier index and generate a replacement
tsoutliers(atm$ATM4)
#do the replacement
atm$ATM4[285] <- tsoutliers(atm$ATM4)$replacements
summary(atm)
#how man NA values
apply(is.na(atm),2,sum)
#how man NA values
apply(is.na(atm),2,sum)
summary(atm)
ggtsdisplay(atm$ATM1, points = FALSE)
atm$ATM1 %>%
model(
STL(ATM1 ~ trend(window = 7) +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
autoplot()
ATM_1 <- atm %>%
select(date, ATM1)
ATM_1 %>%
model(
STL(ATM1 ~ trend(window = 7) +
season(window = "periodic"),
robust = TRUE)) %>%
components() %>%
autoplot()
View(atm_data)
